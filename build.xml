<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="jaywalker" default="all" basedir=".">

	<property file="build.properties" />

	<import file="src/ant/manifest.xml" />
	<import file="src/ant/emma.xml" />

	<path id="path.run.app">
		<pathelement location="build/classes" />
	</path>

	<path id="path.compile.app">
		<pathelement path="tools/ant/ant-1.6.3.jar" />
		<pathelement path="tools/ant/ant-apache-bcel.jar" />
		<pathelement path="tools/bcel/bcel-5.1.jar" />
		<pathelement path="tools/log4j/log4j-1.2.9.jar" />
		<pathelement path="tools/one-jar/one-jar-boot-0.95.jar" />
	</path>

	<path id="path.compile.test">
		<pathelement location="build/classes" />
		<pathelement location="build/classes-test" />
		<path refid="path.compile.app" />
		<pathelement path="tools/junit/junit-3.8.1.jar" />
		<pathelement path="tools/ant/ant-testutil-1.6.3.jar" />
		<pathelement path="tools/xmlunit/xmlunit1.0.jar" />
	</path>

	<target name="all" depends="clean, test" description="build all" />

	<target name="clean" description="cleanup all">
		<delete>
			<fileset dir="." includes="junit*.properties" />
		</delete>
		<delete dir="build" />
	</target>

	<target name="compile-app" description="compiles the application">
		<mkdir dir="build/classes" />
		<javac debug="on" srcdir="src/app" destdir="build/classes" classpathref="path.compile.app" />
	</target>

	<target name="compile-test" description="compiles the tests">
		<mkdir dir="build/classes-test" />
		<javac debug="on" srcdir="src/utest" destdir="build/classes-test" classpathref="path.compile.test" />
		<javac debug="on" srcdir="src/itest" destdir="build/classes-test" classpathref="path.compile.test" />
	</target>

	<target name="compile-test1" description="compiles test2">
		<mkdir dir="build/classes-test/test1" />
		<javac debug="on" srcdir="src/data/test1" destdir="build/classes-test/test1">
		</javac>
	</target>

	<target name="compile-test2" description="compiles test2">
		<mkdir dir="build/classes-test/test2" />
		<javac debug="on" srcdir="src/data/test2" destdir="build/classes-test/test2">
		</javac>
	</target>

	<target name="compile-test5" description="compiles test5">
		<mkdir dir="build/classes-test/test5" />
		<javac debug="on" srcdir="src/data/test5" destdir="build/classes-test/test5">
		</javac>
	</target>

	<target name="dist-test" depends="compile-test1, compile-test2, compile-test5">
		<!-- Jar test harness -->
		<mkdir dir="build/data" />
		<jar destfile="build/data/${ant.project.name}-test.jar">
			<fileset dir="build/classes-test">
				<include name="**/test*/**" />
				<include name="**/*.class" />
				<exclude name="test1/**" />
				<exclude name="test2/**" />
				<exclude name="test5/**" />
			</fileset>
		</jar>
		<jar basedir="build/classes-test/test1" destfile="build/data/${ant.project.name}-test1.jar" />
		<jar destfile="build/data/${ant.project.name}-test2.jar">
			<fileset dir="build/classes-test/test2">
				<exclude name="bogus/**" />
			</fileset>
		</jar>
		<jar destfile="build/data/${ant.project.name}-test3.jar">
			<fileset dir="build/data">
				<include name="${ant.project.name}-test1.jar" />
				<include name="${ant.project.name}-test2.jar" />
			</fileset>
		</jar>
		<jar destfile="build/data/${ant.project.name}-test4.jar">
			<fileset dir="build/data">
				<include name="${ant.project.name}-test1.jar" />
				<include name="${ant.project.name}-test2.jar" />
				<include name="${ant.project.name}-test3.jar" />
			</fileset>
		</jar>
		<ear destfile="build/data/${ant.project.name}-test.ear" appxml="src/metadata/application.xml">
			<zipfileset dir="build/data" includes="*.jar" prefix="APP-INF/lib" />
		</ear>
		<jar basedir="build/classes-test/test5" destfile="build/data/${ant.project.name}-test5.jar" />
		<jar basedir="build/classes-test/test2" destfile="build/data/${ant.project.name}-cycle-part1.jar" includes="cycle1/Node1.class,cycle2/Node2.class" />
		<jar basedir="build/classes-test/test2" destfile="build/data/${ant.project.name}-cycle-part2.jar" includes="cycle3/Node3.class" />
	</target>

	<target name="test" depends="dist, compile-test, dist-test">

		<mkdir dir="build/classes-instr" />
		<mkdir dir="build/doc/emma" />

		<emma>
			<instr instrpathref="path.run.app" destdir="build/classes-instr" metadatafile="build/doc/emma/metadata.emma" merge="true">
			</instr>
		</emma>

		<mkdir dir="build/doc/junit" />
		<delete file="build/doc/emma/coverage.emma" />

		<junit printsummary="on" dir="${basedir}" failureproperty="junit-failure">
			<classpath>
				<pathelement location="build/classes-instr" />
				<pathelement location="build/classes-test" />
				<path refid="path.compile.test" />
				<path refid="emma.lib" />
				<path location="build/dist/${ant.project.name}-bin-${project.version}.jar" />
			</classpath>

			<batchtest fork="true" todir="build/doc/junit">
				<formatter type="xml" />
				<fileset dir="src/utest">
					<include name="**/*Test.java" />
					<exclude name="**/Abstract*Test.java" />
				</fileset>
			</batchtest>

			<jvmarg value="-Demma.coverage.out.file=${basedir}/build/doc/emma/coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />

		</junit>

		<junit printsummary="on" dir="${basedir}" failureproperty="junit-failure">
			<classpath>
				<path refid="emma.lib" />
				<pathelement path="tools/ant/ant-testutil-1.6.3.jar" />
				<path location="build/classes-test" />
				<path location="build/dist/${ant.project.name}-${project.version}.jar" />
				<pathelement path="tools/xmlunit/xmlunit1.0.jar" />
			</classpath>

			<batchtest fork="true" todir="build/doc/junit">
				<formatter type="xml" />
				<fileset dir="src/itest">
					<include name="**/*Test.java" />
					<exclude name="**/Abstract*Test.java" />
				</fileset>
			</batchtest>

			<jvmarg value="-Demma.coverage.out.file=${basedir}/build/doc/emma/coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />

		</junit>

		<emma>
			<report sourcepath="src/app" sort="+block,+name,+method,+class" metrics="method:70,block:80,line:80,class:100">
				<fileset dir="build/doc/emma">
					<include name="*.emma" />
				</fileset>

				<txt outfile="${basedir}/build/doc/emma/coverage.txt" depth="package" columns="class,method,block,line,name" />
				<xml outfile="${basedir}/build/doc/emma/coverage.xml" depth="package" />
				<html outfile="${basedir}/build/doc/emma/coverage.html" depth="method" columns="name,class,method,block,line" />
			</report>
		</emma>

		<mkdir dir="build/doc/junit-reports" />

		<junitreport todir="build/doc/junit-reports">
			<fileset dir="build/doc/junit">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="build/doc/junit-reports/html" />
		</junitreport>

		<fail message="JUnit test(s) failed" if="junit-failure" />

	</target>

	<target name="dist" depends="compile-app">
		<mkdir dir="build/meta-inf" />
		<copy todir="build/meta-inf">
			<fileset dir="src/metadata/meta-inf" />
			<filterset>
				<filter token="implementation.title" value="${implementation.title}" />
				<filter token="implementation.version" value="${implementation.version}" />
				<filter token="implementation.url" value="${implementation.url}" />
			</filterset>
		</copy>
		<mkdir dir="build/dist" />
		<zip destfile="build/dist/report.zip">
			<zipfileset dir="src/metadata/report" prefix="" />
		</zip>
		<jar destfile="build/dist/${ant.project.name}-bin-${project.version}.jar" manifest="build/meta-inf/main-manifest.mf">
			<fileset dir="build/classes">
				<exclude name="**/test*/**" />
				<exclude name="**/*Test.class" />
				<exclude name="test1/**" />
				<exclude name="test2/**" />
				<exclude name="**/JayWalkerTask*.class" />
				<exclude name="**/ant/" />
			</fileset>
			<zipfileset dir="src/metadata/xslt" prefix="META-INF/xslt" />
			<zipfileset dir="src/metadata/css" prefix="META-INF/css" />
			<zipfileset file="build/dist/report.zip" prefix="META-INF" />
		</jar>
		<mkdir dir="build/one-jar-boot" />
		<unjar src="tools/one-jar/one-jar-boot-0.95.jar" dest="build/one-jar-boot" />
		<jar destfile="${ant.project.name}-${project.version}.jar" manifest="build/meta-inf/boot-manifest.mf">
			<zipfileset dir="build/dist" prefix="main">
				<include name="${ant.project.name}-bin-${project.version}.jar" />
			</zipfileset>
			<zipfileset dir="tools/bcel" includes="bcel-5.1.jar" prefix="lib" />
			<zipfileset dir="build/one-jar-boot">
				<include name="com/simontuffs/onejar/*.class" />
			</zipfileset>
			<zipfileset dir="src/metadata/ant" />
			<zipfileset dir="build/classes">
				<include name="**/JayWalkerTask*.class" />
				<include name="**/ant/" />
			</zipfileset>
		</jar>
	</target>

</project>
